geom_vline(xintercept = unif_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = unif_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'coral1') +
ggtitle("Posterior Function from a Uniform Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
cumul_j <- pgamma(mu_range, shape = sum(obs) + 1/2, rate=length(obs))
jef_l_lim <- mu_range[length(cumul_j[cumul_j < 0.025])]
jef_h_lim <- mu_range[length(cumul_j[cumul_j < 0.975])]
cat("\n95 % Credibility Interval :\n
\t", jef_l_lim, "-", jef_h_lim, "with the Jeffrey's prior")
x_plot <- seq(jef_l_lim, jef_h_lim, by=0.1)
cred_plot <- dgamma(x_plot, shape = sum(obs) + 1/2, rate=length(obs) )
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_j), color='firebrick3', lwd=1.5) +
geom_vline(xintercept = jef_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = jef_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'khaki2') +
ggtitle("Posterior Function from a Jeffrey's Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
cumul_unif <- pgamma(mu_range, shape = sum(obs) + 1, rate=length(obs))
unif_l_lim <- mu_range[length(cumul[cumul < 0.025])]
unif_h_lim <- mu_range[length(cumul[cumul < 0.975])]
lower <- (qgamma(0.025, sum(obs) + 1, length(obs)))
cat(lower)
cat("\n95 % Credibility Interval :
\t", unif_l_lim, "-", unif_h_lim, "with the Uniform prior")
x_plot <- seq(unif_l_lim, unif_h_lim, by=0.1)
cred_plot <- dgamma(x_plot, shape = sum(obs) + 1, rate=length(obs) )
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_u), color='steelblue3', lwd=1.5) +
geom_vline(xintercept = unif_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = unif_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'coral1') +
ggtitle("Posterior Function from a Uniform Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
cumul_unif <- pgamma(mu_range, shape = sum(obs) + 1, rate=length(obs))
unif_l_lim <- mu_range[length(cumul[cumul < 0.025])]
unif_h_lim <- mu_range[length(cumul[cumul < 0.975])]
l_bound <- (qgamma(0.025, sum(obs) + 1, length(obs)))
h_bound <- (qgamma(0.975, sum(obs) + 1, length(obs)))
cat(h_bound)
cat("\n95 % Credibility Interval :
\t", unif_l_lim, "-", unif_h_lim, "with the Uniform prior")
x_plot <- seq(unif_l_lim, unif_h_lim, by=0.1)
cred_plot <- dgamma(x_plot, shape = sum(obs) + 1, rate=length(obs) )
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_u), color='steelblue3', lwd=1.5) +
geom_vline(xintercept = unif_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = unif_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'coral1') +
ggtitle("Posterior Function from a Uniform Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
#limit with another method
jef_l_lim <- round((qgamma(0.025, sum(obs) + 1/2, length(obs))),2)
jef_h_lim <- round((qgamma(0.975, sum(obs) + 1/2, length(obs))),2)
cat("\n95 % Credibility Interval :
\t", jef_l_lim, "-", jef_h_lim, "with the Jeffrey's prior")
x_plot <- seq(jef_l_lim, jef_h_lim, by=0.1)
cred_plot <- dgamma(x_plot, shape = sum(obs) + 1/2, rate=length(obs) )
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_j), color='firebrick3', lwd=1.5) +
geom_vline(xintercept = jef_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = jef_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'khaki2') +
ggtitle("Posterior Function from a Jeffrey's Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
#from a Jeffrey’s prior
posterior_j <- dgamma(mu_range, shape = sum(obs) + 1/2, rate=length(obs))
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_j), color='firebrick4', lwd=1.5) +
ggtitle("Posterior Function from a Jeffrey’s Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
#Analytic mean, median and variance
mean_post_j <- ((sum(obs) + 1/2)/length(obs))   #alpha/beta
cat("\nThe analytic mean of the found Posterior distribution is:", mean_post_j)
#median_post <- (())
#cat("\nThe analytic median of the found Posterior distribution is:", median_post)
var_post_j <- ((sum(obs) + 1/2)/(length(obs))^2)    #alpha/beta^2
cat("\nThe analytic variance of the found Posterior distribution is:", var_post_j)
#Numerical mean, median and variance
mean_int <- function(x){
return (x*dgamma(x, shape = sum(obs) + 1/2, rate=length(obs)))
}
mean_num <- integrate(mean_int, lower = 0 , upper = Inf)
cat("\nThe numerical mean of the found Posterior distribution is:", mean_num$value)
cumul_j <- pgamma(mu_range, shape = sum(obs) + 1/2, rate=length(obs))
median_num <- mu_range[length(cumul_j[cumul_j < 0.5])]
cat("\nThe numeric median of the found Posterior distribution is:", median_num)
var_int <- function(x){
return ((x^2)*dgamma(x, shape = sum(obs) + 1/2, rate=length(obs)))
}
var_num <- integrate(var_int, lower = 0 , upper = Inf)
cat("\nThe numerical variance of the found Posterior distribution is:", var_num$value - mean_num$value^2)
posterior_n_u <- dnorm(mu_range, mean=mean_post_u, sd=mean_post_u)
obs <- c(4,1,3,1,3)
mu_range <- seq(0,10, by=0.01)
#from a uniform prior
posterior_u <- dgamma(mu_range, shape = sum(obs) + 1, rate=length(obs))
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_u), color='steelblue3', lwd=1.5) +
ggtitle("Posterior Function from a Uniform Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
#Analytic mean, median and variance
mean_post_u <- ((sum(obs) + 1)/length(obs))   #alpha/beta
cat("\nThe analytic mean of the found Posterior distribution is:", mean_post_u)
#median_post <- (())
#cat("\nThe analytic median of the found Posterior distribution is:", median_post)
var_post_u <- ((sum(obs) + 1)/(length(obs))^2)    #alpha/beta^2
cat("\nThe analytic variance of the found Posterior distribution is:", var_post_u)
#Numerical mean, median and variance
mean_int <- function(x){
return (x*dgamma(x, shape = sum(obs) + 1, rate=length(obs)))
}
mean_num <- integrate(mean_int, lower = 0 , upper = Inf)
cat("\nThe numerical mean of the found Posterior distribution is:", mean_num$value)
cumul <- pgamma(mu_range, shape = sum(obs) + 1, rate=length(obs))
median_num <- mu_range[length(cumul[cumul < 0.5])]
cat("\nThe numeric median of the found Posterior distribution is:", median_num)
var_int <- function(x){
return ((x^2)*dgamma(x, shape = sum(obs) + 1, rate=length(obs)))
}
var_num <- integrate(var_int, lower = 0 , upper = Inf)
cat("\nThe numerical variance of the found Posterior distribution is:", var_num$value - mean_num$value^2)
#from a Jeffrey’s prior
posterior_j <- dgamma(mu_range, shape = sum(obs) + 1/2, rate=length(obs))
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_j), color='firebrick4', lwd=1.5) +
ggtitle("Posterior Function from a Jeffrey’s Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
#Analytic mean, median and variance
mean_post_j <- ((sum(obs) + 1/2)/length(obs))   #alpha/beta
cat("\nThe analytic mean of the found Posterior distribution is:", mean_post_j)
#median_post <- (())
#cat("\nThe analytic median of the found Posterior distribution is:", median_post)
var_post_j <- ((sum(obs) + 1/2)/(length(obs))^2)    #alpha/beta^2
cat("\nThe analytic variance of the found Posterior distribution is:", var_post_j)
#Numerical mean, median and variance
mean_int <- function(x){
return (x*dgamma(x, shape = sum(obs) + 1/2, rate=length(obs)))
}
mean_num <- integrate(mean_int, lower = 0 , upper = Inf)
cat("\nThe numerical mean of the found Posterior distribution is:", mean_num$value)
cumul_j <- pgamma(mu_range, shape = sum(obs) + 1/2, rate=length(obs))
median_num <- mu_range[length(cumul_j[cumul_j < 0.5])]
cat("\nThe numeric median of the found Posterior distribution is:", median_num)
var_int <- function(x){
return ((x^2)*dgamma(x, shape = sum(obs) + 1/2, rate=length(obs)))
}
var_num <- integrate(var_int, lower = 0 , upper = Inf)
cat("\nThe numerical variance of the found Posterior distribution is:", var_num$value - mean_num$value^2)
cumul_unif <- pgamma(mu_range, shape = sum(obs) + 1, rate=length(obs))
unif_l_lim <- mu_range[length(cumul[cumul < 0.025])]
unif_h_lim <- mu_range[length(cumul[cumul < 0.975])]
cat("\n95 % Credibility Interval :
\t", unif_l_lim, "-", unif_h_lim, "with the Uniform prior")
x_plot <- seq(unif_l_lim, unif_h_lim, by=0.1)
cred_plot <- dgamma(x_plot, shape = sum(obs) + 1, rate=length(obs) )
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_u), color='steelblue3', lwd=1.5) +
geom_vline(xintercept = unif_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = unif_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'coral1') +
ggtitle("Posterior Function from a Uniform Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
#limit with another method
jef_l_lim <- round((qgamma(0.025, sum(obs) + 1/2, length(obs))),2)
jef_h_lim <- round((qgamma(0.975, sum(obs) + 1/2, length(obs))),2)
cat("\n95 % Credibility Interval :
\t", jef_l_lim, "-", jef_h_lim, "with the Jeffrey's prior")
x_plot <- seq(jef_l_lim, jef_h_lim, by=0.1)
cred_plot <- dgamma(x_plot, shape = sum(obs) + 1/2, rate=length(obs) )
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_j), color='firebrick3', lwd=1.5) +
geom_vline(xintercept = jef_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = jef_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'khaki2') +
ggtitle("Posterior Function from a Jeffrey's Prior")+ labs(x=TeX('$\\mu$'),
y= TeX('$ProbabilityDensity(\\mu)$')) +
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
posterior_n_u <- dnorm(mu_range, mean=mean_post_u, sd=mean_post_u)
norm_u_l_lim <- round((qnorm(0.025, mean=mean_post_u, sd=mean_post_u)),2)
norm_u_h_lim <- round((qnorm(0.975, mean=mean_post_u, sd=mean_post_u)),2)
cat("\n95 % Credibility Interval :
\t", norm_u_l_lim, "-", norm_u_h_lim, "with the Uniform prior")
x_plot <- seq(norm_u_l_lim, norm_u_h_lim, by=0.1)
cred_plot <- dnorm(x_plot, mean=mean_post_u, sd=mean_post_u)
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_n_u), color='steelblue3', lwd=1.5) +
geom_vline(xintercept = norm_u_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = norm_u_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'coral1') +
ggtitle("Posterior distribution using the normal approx")+
labs(x = TeX('$\\mu$'),y = TeX('$ProbabilityDensity(\\mu)$'), subtitle='Mean and std from the posterior with the Uniform prior') +
theme(plot.title = element_text(size=16),
plot.subtitle = element_text(size=12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
Title='')+
posterior_n_u <- dnorm(mu_range, mean=mean_post_u, sd=mean_post_u)
norm_u_l_lim <- round((qnorm(0.025, mean=mean_post_u, sd=mean_post_u)),2)
norm_u_h_lim <- round((qnorm(0.975, mean=mean_post_u, sd=mean_post_u)),2)
cat("\n95 % Credibility Interval :
\t", norm_u_l_lim, "-", norm_u_h_lim, "with the Uniform prior")
x_plot <- seq(norm_u_l_lim, norm_u_h_lim, by=0.1)
cred_plot <- dnorm(x_plot, mean=mean_post_u, sd=mean_post_u)
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_n_u), color='steelblue3', lwd=1.5) +
geom_vline(xintercept = norm_u_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = norm_u_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'coral1') +
ggtitle("Posterior distribution using the normal approx")+
labs(x = TeX('$\\mu$'),y = TeX('$ProbabilityDensity(\\mu)$'), subtitle='Mean and std from the posterior with the Uniform prior') +
theme(plot.title = element_text(size=16),
plot.subtitle = element_text(size=12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
posterior_n_u <- dnorm(mu_range, mean=mean_post_u, sd=var_post_u)
norm_u_l_lim <- round((qnorm(0.025, mean=mean_post_u, sd=var_post_u)),2)
norm_u_h_lim <- round((qnorm(0.975, mean=mean_post_u, sd=var_post_u)),2)
cat("\n95 % Credibility Interval :
\t", norm_u_l_lim, "-", norm_u_h_lim, "with the Uniform prior")
x_plot <- seq(norm_u_l_lim, norm_u_h_lim, by=0.1)
cred_plot <- dnorm(x_plot, mean=mean_post_u, sd=var_post_u)
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_n_u), color='steelblue3', lwd=1.5) +
geom_vline(xintercept = norm_u_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = norm_u_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'coral1') +
ggtitle("Posterior distribution using the normal approx")+
labs(x = TeX('$\\mu$'),y = TeX('$ProbabilityDensity(\\mu)$'), subtitle='Mean and std from the posterior with the Uniform prior') +
theme(plot.title = element_text(size=16),
plot.subtitle = element_text(size=12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
posterior_n_j <- dnorm(mu_range, mean=mean_post_j, sd=var_post_j)
norm_j_l_lim <- round((qnorm(0.025, mean=mean_post_j, sd=var_post_j)),2)
norm_j_h_lim <- round((qnorm(0.975, mean=mean_post_j, sd=var_post_j)),2)
cat("\n95 % Credibility Interval :
\t", norm_j_l_lim, "-", norm_j_h_lim, "with the Jeffrey's prior")
x_plot <- seq(norm_j_l_lim, norm_j_h_lim, by=0.1)
cred_plot <- dnorm(x_plot, mean=mean_post_j, sd=var_post_j)
plot <- ggplot() + theme_linedraw() +
geom_line(aes(x=mu_range, y=posterior_n_j), color='firebrick3', lwd=1.5) +
geom_vline(xintercept = norm_j_l_lim , linetype='dashed', lwd=0.8) +
geom_vline(xintercept = norm_j_h_lim , linetype='dashed', lwd=0.8) +
geom_ribbon(aes(x=x_plot, ymin=0 , ymax=cred_plot), alpha =0.3, fill = 'khaki2') +
ggtitle("Posterior distribution using the Normal approx")+
labs(x = TeX('$\\mu$'),y = TeX('$ProbabilityDensity(\\mu)$'), subtitle="Mean and std from the posterior with the Jeffrey's prior") +
theme(plot.title = element_text(size=16),
plot.subtitle = element_text(size=12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
plot
df <- data.frame(row.names=c('Uniform Prior', "Jeffrey's Prior", 'Normal with Unif' , 'Normal with Jeffrey'))
df["LowerBound_CI"] <- c(unif_l_lim, jef_l_lim, norm_u_l_lim, norm_j_l_lim)
df["UpperBound_CI"] <- c(unif_h_lim, jef_h_lim, norm_u_h_lim, norm_j_h_lim)
df
df <- data.frame(row.names=c('Uniform Prior', "Jeffrey's Prior", 'Normal with Unif' , 'Normal with Jeffrey'))
df["LowerBound_CI_95%"] <- c(unif_l_lim, jef_l_lim, norm_u_l_lim, norm_j_l_lim)
df["UpperBound_CI_95%"] <- c(unif_h_lim, jef_h_lim, norm_u_h_lim, norm_j_h_lim)
df
p_log_like <- function(a , b, data){
logL <- 0.0
for (x in data){
logL <- logL - log(1 + ((x-a)/b)^2)
}
return (logL)
}
n_sample <- 200
x_min <- -7
x_max <- 7
h <- (x_max - x_min)/n_sample
alpha <- seq(x_min, by=h , length.out = n_sample+1)
x_min <- -17
x_max <- 17
h <- (x_max - x_min)/n_sample
beta <- seq(x_min, by=h , length.out = n_sample+1)
p_log_like <- function(a , b, data){
logL <- 0.0
for (x in data){
logL <- logL - log(1 + ((x-a)/b)^2)
}
return (logL)
}
n_sample <- 200
x_min <- -7
x_max <- 7
h <- (x_max - x_min)/n_sample
alpha <- seq(x_min, by=h , length.out = n_sample+1)
x_min <- -17
x_max <- 17
h <- (x_max - x_min)/n_sample
beta <- seq(x_min, by=h , length.out = n_sample+1)
alpha
dt <- data[1:n_sample]
dt <- data[1:200]
p_log_like <- function(a , b, data){
logL <- 0.0
for (x in data){
logL <- logL - log(1 + ((x-a)/b)^2)
}
return (logL)
}
n_sample <- 200
obs_x <- seq(-5,5, length.out = n_sample)
x_min <- -7
x_max <- 7
h <- (x_max - x_min)/n_sample
alpha <- seq(x_min, by=h , length.out = n_sample+1)
x_min <- -17
x_max <- 17
h <- (x_max - x_min)/n_sample
beta <- seq(x_min, by=h , length.out = n_sample+1)
# Get the LogLikelihood
y_log_star <- p_log_like(alpha, beta, obs_x)
# - Find the maximum
index_max <- which.max(y_log_star)
alpha_max <- alpha[index_max]
beta_max <- beta[index_max]
cat("Alpha max: ", alpha_max , "\n")
cat("\nBeta max: ", beta_max , "\n")
# get the exponential and normalize the posterior
un_post <- exp(y_log_star)
posterior <- un_post/(h*sum(y_post_star))
p_log_like <- function(a , b, data){
logL <- 0.0
for (x in data){
logL <- logL - log(1 + ((x-a)/b)^2)
}
return (logL)
}
n_sample <- 200
obs_x <- seq(-5,5, length.out = n_sample+1)
x_min <- -7
x_max <- 7
h <- (x_max - x_min)/n_sample
alpha <- seq(x_min, by=h , length.out = n_sample+1)
beta <- seq(x_min, by=h , length.out = n_sample+1)
# Get the LogLikelihood
y_log_star <- p_log_like(alpha, beta, obs_x)
# - Find the maximum
index_max <- which.max(y_log_star)
alpha_max <- alpha[index_max]
beta_max <- beta[index_max]
cat("Alpha max: ", alpha_max , "\n")
cat("\nBeta max: ", beta_max , "\n")
# get the exponential and normalize the posterior
un_post <- exp(y_log_star)
posterior <- un_post/(h*sum(y_post_star))
p_log_like <- function(a , b, data){
logL <- 0.0
for (x in data){
logL <- logL - log(1 + ((x-a)/b)^2)
}
return (logL)
}
n_sample <- 200
obs_x <- seq(-5,5, length.out = n_sample+1)
x_min <- -7
x_max <- 7
h <- (x_max - x_min)/n_sample
alpha <- seq(x_min, by=h , length.out = n_sample+1)
beta <- seq(x_min, by=h , length.out = n_sample+1)
# Get the LogLikelihood
y_log_star <- p_log_like(alpha, beta, obs_x)
# - Find the maximum
index_max <- which.max(y_log_star)
alpha_max <- alpha[index_max]
beta_max <- beta[index_max]
cat("Alpha max: ", alpha_max , "\n")
cat("\nBeta max: ", beta_max , "\n")
# get the exponential and normalize the posterior
un_post <- exp(y_log_star)
posterior <- un_post/(h*sum(posterior))
plot(alpha , y.post , type='l', lwd=2, col='firebrick 3')
p_log_like <- function(a , b, data){
logL <- 0.0
for (x in data){
logL <- logL - log(1 + ((x-a)/b)^2)
}
return (logL)
}
n_sample <- 200
obs_x <- seq(-5,5, length.out = n_sample+1)
x_min <- -7
x_max <- 7
h <- (x_max - x_min)/n_sample
alpha <- seq(x_min, by=h , length.out = n_sample+1)
beta <- seq(x_min, by=h , length.out = n_sample+1)
# Get the LogLikelihood
y_log_star <- p_log_like(alpha, beta, obs_x)
# - Find the maximum
index_max <- which.max(y_log_star)
alpha_max <- alpha[index_max]
beta_max <- beta[index_max]
cat("Alpha max: ", alpha_max , "\n")
cat("\nBeta max: ", beta_max , "\n")
# get the exponential and normalize the posterior
un_post <- exp(y_log_star)
posterior <- un_post/(h*sum(posterior))
plot(alpha , posterior , type='l', lwd=2, col='firebrick 3')
p_log_like <- function(a , b, data){
logL <- 0.0
for (x in data){
logL <- logL - log(1 + ((x-a)/b)^2)
}
return (logL)
}
n_sample <- 200
obs_x <- seq(-5,5, length.out = n_sample+1)
x_min <- -7
x_max <- 7
h <- (x_max - x_min)/n_sample
alpha <- seq(x_min, by=h , length.out = n_sample+1)
beta <- seq(x_min, by=h , length.out = n_sample+1)
# Get the LogLikelihood
y_log_star <- p_log_like(alpha, beta, obs_x)
# - Find the maximum
index_max <- which.max(y_log_star)
alpha_max <- alpha[index_max]
beta_max <- beta[index_max]
cat("Alpha max: ", alpha_max , "\n")
cat("\nBeta max: ", beta_max , "\n")
# get the exponential and normalize the posterior
un_post <- exp(y_log_star)
posterior <- un_post/(h*sum(posterior))
plot(alpha , posterior , type='l', lwd=2, col='firebrick 3')
plot(beta , posterior , type='l', lwd=2, col='firebrick 3')
n.str <- readline ("Enter data set dimension : ")
n.plot <- as. numeric ( unlist ( strsplit (n.str , ",")))
n.str <- readline ("Enter data set dimension : ")
n.plot <- as.numeric( unlist ( strsplit (n.str , ",")))
dt <- data[1:n.plot]
n.str <- readline ("Enter data set dimension : ")
n.plot <- as.numeric( unlist ( strsplit (n.str , ",")))
dt <- data[1:n.plot]
n.str <- readline ("Enter data set dimension : ")
n.plot <- as.numeric( unlist ( strsplit (n.str , ",")))
dt <- data[1:n.plot]
n.str <- readline ("Enter data set dimension : ")
n.plot <- as.numeric( unlist ( strsplit (n.str , ",")))
dt <- data[1:n.plot]
